## SET UP
substitutions:
  #GENRAL
  esphome_node_name: "esp32-feather-s2"
  board_model: "lolin_s2_mini"
  framework_type: "arduino"
  # leave ap pass blank for no pass, who remembers all their node hotspot passwords anyway?
  ap_pass: ""
  esp_name: "ESP Volume Box"
  
  #KEYS
  ota_pass: "Don't forget me"
  encryption_key: "please Don't forget me either "

  #DISPLAY
  display_platform: "ssd1351_spi"
  display_model: "SSD1351 128x128"
  spi_clk: "10"
  spi_mosi: "11"
  pin_reset: "14"
  pin_cs: "12"
  pin_dc: "13"
  #ROTARY ENCODER
  rotaty_clk: "7"
  rotaty_a: "8"
  rotaty_b: "9" 

## entity for Volume control/level
  media_player: "media_player.kodi_appletv"

##entity for text/titles (app name, artist, title)
  media_player2: "media_player.appletv_4k"




#######################################################
#                   end user inputs                   #
#######################################################
  
esphome:
  name: ${esphome_node_name}
## NAME YOUR BOARD TYPE
esp32:
  board: ${board_model}
  framework:
    type: ${framework_type}
## DONT REMOVE
logger:
## DONT REMOVE
api:
  encryption:
    key: "${encryption_key}"
## DONT REMOVE
ota:
  password: "${ota_pass}"
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  ap:
    ssid: "${esp_name} Hotspot"
    password: "${ap_pass}"
## ROTATY CLICK
binary_sensor:
  - platform: gpio
    name: '${esp_name} Click'
    id: bam
    pin: ${rotaty_clk}
    internal: true
    filters:      
      - delayed_off: 50ms
      - invert: 
    on_multi_click:
    - timing: 
        - ON for at least .3s       
      then:     
            - switch.turn_on: switch1
            - homeassistant.service:
                service: media_player.volume_mute
                data_template:                 
                  is_volume_muted: "true"
                  entity_id: ${media_player} 
    - timing: 
        - ON for at least 1s       
      then:     
            - homeassistant.service:
                service: media_player.volume_mute
                data_template:                 
                  is_volume_muted: "false"
                  entity_id: ${media_player}     
##SCREEN ON / OFF
switch:
  - platform: template
    name: "${esp_name} Display"
    optimistic: true
    restore_state: ON
    id: switch1
    turn_on_action:
      - lambda: id(magic_square).turn_on();
      - light.turn_on: leds
    turn_off_action:
      - lambda: id(magic_square).turn_off();
      - light.turn_off: leds
## ROTARY ENCODER KNOB
sensor:
  - platform: rotary_encoder
    name: "${esp_name} Rotary Encoder"
    id: spin_it
    pin_a: ${rotaty_a}
    pin_b: ${rotaty_b}
    resolution: 1
    restore_mode: ALWAYS_ZERO
    publish_initial_value: true
    min_value: 0
    max_value: 100
    filters:
    - debounce: 0.33s    
    on_clockwise:
          then:
            - delay: .33s        
            - homeassistant.service:
                service: media_player.volume_set
                data_template:                 
                  volume_level: !lambda "return id(spin_it).state / 100;"
                  entity_id: ${media_player}                  
    on_anticlockwise:
          then:     
            - delay: .33s    
            - homeassistant.service:
                service: media_player.volume_set
                data_template:                 
                  volume_level: !lambda "return id(spin_it).state / 100;"
                  entity_id: ${media_player}     
    internal: true     
    on_value_range:
      - below: 005
        then:
          -  light.turn_on:
              id: leds
              brightness: 15%
              red: 100%
              green: 0%
              blue: 50%
      - above: 006
        below: 9
        then:
          -  light.turn_on:
              id: leds
              brightness: 33%
              red: 50%
              green: 0%
              blue: 50%
      - above: 010
        below: 19
        then:
          - light.turn_on:
              id: leds
              effect: none
              brightness: 33%
              red: 75%
              green: 25%
              blue: 25%            
      - above: 020 
        below: 29
        then:
          - light.turn_on:
              id: leds
              brightness: 33%
              red: 50%
              green: 50%
              blue: 0%
      - above: 030
        below: 39
        then:
          - light.turn_on:
              id: leds
              brightness: 33%
              red: 25%
              green: 75%
              blue: 0%       
      - above: 040
        below: 49
        then:
          - light.turn_on:
              id: leds
              brightness: 33%
              red: 0%
              green: 100%
              blue: 0%     
      - above: 050
        below: 59
        then:
          - light.turn_on:
              id: leds
              brightness: 33%
              red: 0%
              green: 100%
              blue: 25%
      - above: 060
        below: 69
        then:
          - light.turn_on:
              id: leds
              brightness: 33%
              red: 0%
              green: 100%
              blue: 50%          
      - above: 070
        below: 79
        then:
          - light.turn_on:
              id: leds
              effect: none
              brightness: 33%
              red: 0%
              green: 100%
              blue: 75%
      - above: 080
        below: 89
        then:
          - light.turn_on:
              id: leds
              brightness: 33%
              red: 0%
              green: 100%
              blue: 100%
      - above: 090
        then:
          - light.turn_on:
              id: leds
              brightness: 53%
              red: 0%
              green: 100%
              blue: 100%
  - platform: homeassistant
    id: media_vol
    entity_id: ${media_player}
    attribute: volume_level
    internal: true
    on_value:
      - delay: 5s
      - sensor.rotary_encoder.set_value:
         id: spin_it
         value: !lambda "return id(media_vol).state * 100;"
        
###############
## Make input number helper & replace brightness value in led color settings like this
#
#- above: 090
#        then:
#          - light.turn_on:
#              id: leds
#              brightness: !lambda 'return id(input_brightness).state;'%
#              red: 0%
#              green: 100%
#              blue: 100%
#              
#  - platform: homeassistant
#    entity_id: input_number.esp_led_brightness
#    id: input_brightness
##############
text_sensor:

  - platform: homeassistant
    entity_id: ${media_player2}
    id: nowplay
    attribute: media_title
  - platform: homeassistant
    entity_id: ${media_player2}
    id: artist
    attribute: media_artist
  - platform: homeassistant
    entity_id: ${media_player2}
    id: app
    attribute: app_name

light:
  - platform: neopixelbus
    type: GRB
    variant: WS2812
    pin: GPIO17
    num_leds: 12
    id: leds
    name: "${esp_name} LED Ring"
  
font:
  - file: 'fonts/arial.ttf'
    id: font1
    size: 18
  - file: "fonts/mdi.ttf"
    id: mdi2
    size: 27
    glyphs: [
       "\U000F075E", #Volume -
      "\U000F075D", #vol +
      ]
  - file: 'fonts/arial.ttf'
    id: font0
    size: 11
    glyphs: '^…*/|\$#<>!?"%()[]+=,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz&''’'
  - file: 'fonts/arial.ttf'
    id: font00
    size: 9
    glyphs: '^…*/|\$#<>!?"%()[]+=,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz&''’'
  - file: 'BebasNeue-Regular.ttf'
    id: font2
    size: 30
    glyphs: '^…*/|\$#<>!?"%()[]+=,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz&''’'
  - file: 'fonts/arial.ttf'
    id: font4
    size: 60
    glyphs: '^…*/|\$#<>!?"%()[]+=,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz&''’'
  - file: 'fonts/arial.ttf'
    id: font3
    size: 20
    glyphs: '^…*/|\$#<>!?"%()[]+=,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz&''’'
color:
  - id: red
    red: 100%
    green: 0%
    blue: 0%
    white: 0%
  - id: blue
    red: 0%
    green: 0%
    blue: 100%
    white: 0%
  - id: blue_green
    red: 0%
    green: 50%
    blue: 50%
    white: 5%
  - id: green
    red: 0%
    green: 100%
    blue: 0%
    white: 0%
  - id: violet
    red: 50%
    green: 0%
    blue: 50%
    white: 5%
##  128*128
spi:
  clk_pin: ${spi_clk}
  mosi_pin: ${spi_mosi}
display:
  - platform: ${display_platform}
    model: "${display_model}"
    id: magic_square
    reset_pin: ${pin_reset}
    cs_pin: ${pin_cs}
    dc_pin: ${pin_dc}
    update_interval: 0.2s 
    brightness: 95%
    lambda: |-
      it.rectangle(0, 0, 128, 128, id(violet));
      it.filled_rectangle(14, 3, id(spin_it).state, 18, id(green));
      it.rectangle(13, 2, 102, 20, id(blue));
      it.printf(64, 40, id(font3), id(green), TextAlign::BASELINE_CENTER, "%s", id(app).state.c_str());
      it.print(2, 25, id(mdi2), id(red), "\U000F075E");
      it.print(100, 25, id(mdi2), id(green), "\U000F075D");
      it.printf(64, 70, id(font0), id(green), TextAlign::BASELINE_CENTER, "%s", id(nowplay).state.c_str());
      it.printf(64, 99, id(font2), id(green), TextAlign::BASELINE_CENTER, "%.0f%", id(spin_it).state);
      it.printf(64, 123, id(font00), id(green), TextAlign::BASELINE_CENTER, "%s", id(artist).state.c_str());
      it.line(0, 110, 128, 110, id(violet));
